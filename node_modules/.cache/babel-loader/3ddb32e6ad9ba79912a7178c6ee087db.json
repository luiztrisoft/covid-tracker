{"ast":null,"code":"import _regeneratorRuntime from \"/home/user/Workspace/REACT/covid-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/user/Workspace/REACT/covid-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nvar url = 'https://covid19.mathdro.id/api';\nexport var fetchData = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(country) {\n    var changeableUrl, _yield$axios$get, _yield$axios$get$data, confirmed, recovered, deaths, lastUpdate;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            changeableUrl = url;\n\n            if (country) {\n              changeableUrl = \"\".concat(url, \"/countries/\").concat(country);\n            }\n\n            _context.prev = 2;\n            _context.next = 5;\n            return axios.get(changeableUrl);\n\n          case 5:\n            _yield$axios$get = _context.sent;\n            _yield$axios$get$data = _yield$axios$get.data;\n            confirmed = _yield$axios$get$data.confirmed;\n            recovered = _yield$axios$get$data.recovered;\n            deaths = _yield$axios$get$data.deaths;\n            lastUpdate = _yield$axios$get$data.lastUpdate;\n            return _context.abrupt(\"return\", {\n              confirmed,\n              recovered,\n              deaths,\n              lastUpdate\n            });\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](2);\n            return _context.abrupt(\"return\", _context.t0);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 14]]);\n  }));\n\n  return function fetchData(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var fetchDailyData = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var _yield$axios$get2, data;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return axios.get(\"\".concat(url, \"/daily/countries/brazil\"));\n\n          case 3:\n            _yield$axios$get2 = _context2.sent;\n            data = _yield$axios$get2.data;\n            return _context2.abrupt(\"return\", data.map(function (_ref3) {\n              var confirmed = _ref3.confirmed,\n                  deaths = _ref3.deaths,\n                  date = _ref3.reportDate;\n              return {\n                confirmed: confirmed.total,\n                deaths: deaths.total,\n                date\n              };\n            }));\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](0);\n            return _context2.abrupt(\"return\", _context2.t0);\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 8]]);\n  }));\n\n  return function fetchDailyData() {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var fetchCountries = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    var _yield$axios$get3, countries;\n\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return axios.get(\"\".concat(url, \"/countries\"));\n\n          case 3:\n            _yield$axios$get3 = _context3.sent;\n            countries = _yield$axios$get3.data.countries;\n            return _context3.abrupt(\"return\", countries.map(function (country) {\n              return country.name;\n            }));\n\n          case 8:\n            _context3.prev = 8;\n            _context3.t0 = _context3[\"catch\"](0);\n            return _context3.abrupt(\"return\", _context3.t0);\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 8]]);\n  }));\n\n  return function fetchCountries() {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var fetchBrazilianDataByUf = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n    var _yield$axios$get4, data;\n\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return axios.get(\"\".concat(url, \"/countries/Brazil/deaths\"));\n\n          case 3:\n            _yield$axios$get4 = _context4.sent;\n            data = _yield$axios$get4.data;\n            return _context4.abrupt(\"return\", data);\n\n          case 8:\n            _context4.prev = 8;\n            _context4.t0 = _context4[\"catch\"](0);\n            return _context4.abrupt(\"return\", _context4.t0);\n\n          case 11:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[0, 8]]);\n  }));\n\n  return function fetchBrazilianDataByUf() {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var fetchSpecialData = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(specialURI) {\n    var _yield$axios$get5, data;\n\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            _context5.next = 3;\n            return axios.get(\"\".concat(url, \"/\").concat(specialURI));\n\n          case 3:\n            _yield$axios$get5 = _context5.sent;\n            data = _yield$axios$get5.data;\n            return _context5.abrupt(\"return\", data);\n\n          case 8:\n            _context5.prev = 8;\n            _context5.t0 = _context5[\"catch\"](0);\n            return _context5.abrupt(\"return\", _context5.t0);\n\n          case 11:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[0, 8]]);\n  }));\n\n  return function fetchSpecialData(_x2) {\n    return _ref6.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/home/user/Workspace/REACT/covid-tracker/src/global/services/covid-19/index.js"],"names":["axios","url","fetchData","country","changeableUrl","get","data","confirmed","recovered","deaths","lastUpdate","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","fetchBrazilianDataByUf","fetchSpecialData","specialURI"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n  let changeableUrl = url;\n\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n\n  try {\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\n\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily/countries/brazil`);\n\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const { data: { countries } } = await axios.get(`${url}/countries`);\n\n    return countries.map((country) => country.name);\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchBrazilianDataByUf = async () => {\n  try {\n    const { data } = await axios.get(`${url}/countries/Brazil/deaths`);\n    return data;\n  } catch (error) {\n    return error;\n  }\n}\n\nexport const fetchSpecialData = async (specialURI) => {\n  try {\n    const { data } = await axios.get(`${url}/${specialURI}`);\n    return data;\n  } catch (error) {\n    return error;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}